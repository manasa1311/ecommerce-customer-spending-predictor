# -*- coding: utf-8 -*-
"""Copy of Linear Regression on ecommerce.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18xLC4JKxoGFVOXgBe6zZCmDaUZu2_1Uk
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import pickle

df = pd.read_csv('../data/Ecommerce_Customers.csv')

df.head()

df.info()

df.shape

df.describe()

#EDA
sns.jointplot(x='Time on Website',y='Yearly Amount Spent',data=df,alpha=0.5)

sns.jointplot(x='Time on App',y='Yearly Amount Spent',data=df,alpha=0.5)

#pairplot to compare two variables
sns.pairplot(df,kind='scatter',plot_kws={'alpha':0.4})

sns.lmplot(x='Length of Membership',y='Yearly Amount Spent',data=df)

x = df[['Avg. Session Length','Time on App','Time on Website','Length of Membership']] #predictors
y = df['Yearly Amount Spent'] #target

X_train,X_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=101)

X_train.shape

X_test.shape

y_test.shape

lr = LinearRegression()

lr.fit(X_train,y_train)

lr.coef_

cdf = pd.DataFrame(lr.coef_, x.columns, columns=['Coef'])

cdf #coeffiecients for each variable of predictors

#predictions
predictions = lr.predict(X_test)
predictions

sns.scatterplot(x=y_test,y=predictions)
plt.xlabel("Predictions")

from sklearn.metrics import mean_absolute_error,mean_squared_error
import math

print("Mean Absolute Error:",mean_absolute_error(y_test,predictions))
print("Mean Squared Error:",mean_squared_error(y_test,predictions))
print("Root Mean Squared Error:",math.sqrt(mean_squared_error(y_test,predictions)))

# Analysing Residuals
residuals = y_test - predictions

residuals

sns.displot(residuals,bins=50,kde=True)

with open("model.pkl","wb") as f:
    pickle.dump(lr,f)
print("saved with .pkl")